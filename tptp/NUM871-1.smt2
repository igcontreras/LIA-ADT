; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((IntState 0)) (((Mk1 (val1 Int)) (Mk2 (val2 Int)))))
 (assert
 (let (($x169 (exists ((?X_st IntState) (val!12 Int) )(exists ((?Y_st IntState) (val!13 Int) )(exists ((?Z_st IntState) (val!14 Int) )(exists ((?Z1_st IntState) (val!15 Int) )(exists ((?Z2_st IntState) (val!16 Int) )(exists ((?Z3_st IntState) (val!17 Int) )(exists ((?Z4_st IntState) (val!18 Int) )(let (($x137 (not (= (val2 ?Z2_st) (val2 ?Z4_st)))))
 (let (($x110 (and (= (+ (val2 ?X_st) (val2 ?Y_st)) (val2 ?Z1_st)) (= (+ (val2 ?Z1_st) (val2 ?Z_st)) (val2 ?Z2_st)) (= (+ (val2 ?Z_st) (val2 ?X_st)) (val2 ?Z3_st)) (= (+ (val2 ?Z3_st) (val2 ?Y_st)) (val2 ?Z4_st)) $x137)))
 (let (($x51 (not (= ?Z4_st (Mk1 val!18)))))
 (let (($x158 (not (= ?Z3_st (Mk1 val!17)))))
 (let (($x156 (not (= ?Z2_st (Mk1 val!16)))))
 (let (($x141 (not (= ?Z1_st (Mk1 val!15)))))
 (let (($x129 (not (= ?Z_st (Mk1 val!14)))))
 (let (($x118 (not (= ?Y_st (Mk1 val!13)))))
 (let (($x103 (not (= ?X_st (Mk1 val!12)))))
 (and $x103 $x118 $x129 $x141 $x156 $x158 $x51 $x110)))))))))))
 )
 )
 )
 )
 )
 )
 ))
 (not $x169)))
(check-sat)
