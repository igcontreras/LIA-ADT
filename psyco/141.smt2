; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(assert
 (let (($x6048 (forall ((V3_0 Int) )(forall ((V2_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((S1_V3_!152 Int) )(forall ((S1_V3_!158 Int) )(forall ((S1_V4_!154 Int) )(forall ((S1_V4_!160 Int) )(forall ((S1_V1_!151 Int) )(forall ((S1_V1_!157 Int) )(forall ((S1_V2_!153 Int) )(forall ((S1_V2_!159 Int) )(forall ((E1_!150 Int) )(forall ((E1_!155 Int) )(forall ((E1_!156 Int) )(forall ((E1_!161 Int) )(let ((?x2306 (ite MW_S1_V4 S1_V4_!160 V4_0)))
 (let (($x2573 (= (ite MW_S1_V4 S1_V4_!154 V4_0) ?x2306)))
 (let (($x2695 (and (= (ite MW_S1_V1 S1_V1_!151 E1_!150) (+ (- 1) (ite MW_S1_V2 S1_V2_!159 V2_0))) (= (ite MW_S1_V3 S1_V3_!152 V3_0) (ite MW_S1_V3 S1_V3_!158 V3_0)) (= (ite MW_S1_V2 S1_V2_!153 V2_0) (ite MW_S1_V2 S1_V2_!159 V2_0)) $x2573)))
 (let (($x896 (and (not (<= V2_0 E1_!150)) (>= (ite MW_S1_V1 S1_V1_!151 E1_!150) (+ (- 1) (ite MW_S1_V2 S1_V2_!153 V2_0))) (not (<= V2_0 E1_!155)) (>= V2_0 (+ 1 E1_!156)) (not (<= E1_!161 (+ (- 1) (ite MW_S1_V1 S1_V1_!157 (+ (- 1) V2_0))))))))
 (let (($x3194 (= E1_!161 E1_!156)))
 (let (($x2409 (and (or (not R_E1_V3) (= (ite MW_S1_V3 S1_V3_!158 V3_0) V3_0)) (or (not R_E1_V2) (= (ite MW_S1_V2 S1_V2_!159 V2_0) V2_0)) (or (not R_E1_V4) (= ?x2306 V4_0)))))
 (let (($x30 (not $x2409)))
 (let (($x2625 (not (or (not R_S1_V1) (= V2_0 (+ 1 E1_!150))))))
 (let (($x608 (not (or (not R_S1_V1) (= E1_!150 (+ (- 1) V2_0))))))
 (let (($x3610 (and (or $x608 (= S1_V3_!152 S1_V3_!158)) (or $x2625 (= S1_V4_!160 S1_V4_!154)) (or $x608 (= S1_V1_!151 S1_V1_!157)) (or $x2625 (= S1_V2_!159 S1_V2_!153)) (= E1_!150 E1_!155) (= E1_!150 E1_!156) (= E1_!155 E1_!156) (or $x30 (= E1_!161 E1_!150)) (or $x30 (= E1_!161 E1_!155)) (or $x30 $x3194) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V4) W_S1_V4))))
 (or (not $x3610) (not $x896) $x2695))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x1861 (or R_E1_V3 (and W_S1_V2 R_E1_V2) (and W_S1_V4 R_E1_V4))))
 (let (($x3206 (= DISJ_W_S1_R_E1 (not $x1861))))
 (let (($x2048 (and W_S1_V4 R_S1_V4)))
 (let (($x2671 (and W_S1_V2 R_S1_V2)))
 (let (($x2399 (and W_S1_V1 R_S1_V1)))
 (let (($x3727 (= DISJ_W_S1_R_S1 (not (or $x2399 R_S1_V3 $x2671 $x2048)))))
 (let (($x2005 (not R_E1_V1)))
 (and $x2005 W_S1_V3 $x3727 $x3206 $x6048))))))))))
(check-sat)
