; benchmark generated from python API
(set-info :status unknown)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun DISJ_W_S2_R_E1 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(assert
 (let (($x512 (not (and (not W_S1_V2) DISJ_W_S1_R_E1))))
 (let (($x3123 (forall ((V3_0 Int) )(forall ((V2_0 Int) )(forall ((V5_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((MW_S2_V4 Bool) )(forall ((S1_V1_!390 Int) )(forall ((S1_V1_!401 Int) )(forall ((S2_V5_!398 Int) )(forall ((S1_V3_!391 Int) )(forall ((S1_V3_!402 Int) )(forall ((S1_V2_!392 Int) )(forall ((S1_V2_!403 Int) )(forall ((E1_!389 Int) )(forall ((E1_!400 Int) )(forall ((E1_!406 Int) )(forall ((S2_V4_!399 Int) )(forall ((S1_V5_!393 Int) )(forall ((S1_V5_!404 Int) )(forall ((S2_V1_!395 Int) )(forall ((S1_V4_!394 Int) )(forall ((S1_V4_!405 Int) )(forall ((S2_V2_!397 Int) )(forall ((S2_V3_!396 Int) )(let (($x2367 (and (= (ite MW_S2_V1 S2_V1_!395 (ite MW_S1_V1 S1_V1_!390 E1_!389)) (+ (- 1) E1_!406)) (= (ite MW_S2_V3 S2_V3_!396 (ite MW_S1_V3 S1_V3_!391 V3_0)) (ite MW_S1_V3 S1_V3_!402 V3_0)) (= (ite MW_S2_V2 S2_V2_!397 (ite MW_S1_V2 S1_V2_!392 V2_0)) (ite MW_S1_V2 S1_V2_!403 V2_0)) (= (ite MW_S2_V5 S2_V5_!398 (ite MW_S1_V5 S1_V5_!393 V5_0)) (ite MW_S1_V5 S1_V5_!404 V5_0)) (= (ite MW_S2_V4 S2_V4_!399 (ite MW_S1_V4 S1_V4_!394 V4_0)) (ite MW_S1_V4 S1_V4_!405 V4_0)))))
 (let ((?x3113 (ite MW_S2_V1 S2_V1_!395 (ite MW_S1_V1 S1_V1_!390 E1_!389))))
 (let (($x304 (and (not (<= V2_0 E1_!389)) (>= ?x3113 (+ (- 1) (ite MW_S2_V2 S2_V2_!397 (ite MW_S1_V2 S1_V2_!392 V2_0)))) (not (<= V2_0 E1_!400)) (>= (ite MW_S1_V1 S1_V1_!401 E1_!400) (+ (- 1) (ite MW_S1_V2 S1_V2_!403 V2_0))) (>= E1_!406 (ite MW_S1_V2 S1_V2_!403 V2_0)))))
 (let (($x4626 (and (or (not R_E1_V3) (= (ite MW_S1_V3 S1_V3_!402 V3_0) V3_0)) (or (not R_E1_V2) (= (ite MW_S1_V2 S1_V2_!403 V2_0) V2_0)) (or (not R_E1_V5) (= (ite MW_S1_V5 S1_V5_!404 V5_0) V5_0)) (or (not R_E1_V4) (= (ite MW_S1_V4 S1_V4_!405 V4_0) V4_0)))))
 (let (($x89 (and (or (not R_E1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!402 V3_0))) (or (not R_E1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!403 V2_0))) (or (not R_E1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!404 V5_0))) (or (not R_E1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!405 V4_0))))))
 (let (($x2029 (and (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V1_!390 S1_V1_!401)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V3_!391 S1_V3_!402)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V2_!392 S1_V2_!403)) (= E1_!400 E1_!389) (or (not $x89) (= E1_!400 E1_!406)) (or (not $x4626) (= E1_!406 E1_!389)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V5_!393 S1_V5_!404)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V4_!394 S1_V4_!405)) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V5) W_S1_V5) (or (not MW_S1_V4) W_S1_V4) (or (not MW_S2_V1) W_S2_V1) (or (not MW_S2_V3) W_S2_V3) (or (not MW_S2_V2) W_S2_V2) (or (not MW_S2_V5) W_S2_V5))))
 (or (not $x2029) (not $x304) $x2367))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x3037 (and W_S2_V5 R_E1_V5)))
 (let (($x2131 (and W_S2_V2 R_E1_V2)))
 (let (($x1016 (and W_S2_V3 R_E1_V3)))
 (let (($x812 (= DISJ_W_S2_R_E1 (not (or $x1016 $x2131 $x3037 R_E1_V4)))))
 (let (($x848 (and W_S2_V5 R_S2_V5)))
 (let (($x2887 (and W_S2_V2 R_S2_V2)))
 (let (($x2977 (and W_S2_V3 R_S2_V3)))
 (let (($x3036 (and W_S2_V1 R_S2_V1)))
 (let (($x5948 (= DISJ_W_S2_R_S2 (not (or $x3036 $x2977 $x2887 $x848 R_S2_V4)))))
 (let (($x1803 (and W_S2_V5 R_S1_V5)))
 (let (($x650 (and W_S2_V2 R_S1_V2)))
 (let (($x2888 (and W_S2_V3 R_S1_V3)))
 (let (($x3305 (and W_S2_V1 R_S1_V1)))
 (let (($x491 (= DISJ_W_S2_R_S1 (not (or $x3305 $x2888 $x650 $x1803 R_S1_V4)))))
 (let (($x3327 (and W_S1_V5 W_S2_V5)))
 (let (($x330 (and W_S1_V2 W_S2_V2)))
 (let (($x484 (and W_S1_V1 W_S2_V1)))
 (let (($x4001 (= DISJ_W_S1_W_S2 (not (or $x484 W_S2_V3 $x330 $x3327 W_S1_V4)))))
 (let (($x5973 (and W_S1_V4 R_E1_V4)))
 (let (($x268 (and W_S1_V5 R_E1_V5)))
 (let (($x4051 (and W_S1_V2 R_E1_V2)))
 (let (($x5893 (= DISJ_W_S1_R_E1 (not (or R_E1_V3 $x4051 $x268 $x5973)))))
 (let (($x4649 (and W_S1_V4 R_S2_V4)))
 (let (($x520 (and W_S1_V5 R_S2_V5)))
 (let (($x5667 (and W_S1_V2 R_S2_V2)))
 (let (($x2134 (and W_S1_V1 R_S2_V1)))
 (let (($x3233 (= DISJ_W_S1_R_S2 (not (or $x2134 R_S2_V3 $x5667 $x520 $x4649)))))
 (let (($x3723 (and W_S1_V4 R_S1_V4)))
 (let (($x5285 (and W_S1_V5 R_S1_V5)))
 (let (($x5884 (and W_S1_V2 R_S1_V2)))
 (let (($x5045 (and W_S1_V1 R_S1_V1)))
 (let (($x767 (= DISJ_W_S1_R_S1 (not (or $x5045 R_S1_V3 $x5884 $x5285 $x3723)))))
 (let (($x4856 (not R_E1_V1)))
 (let (($x700 (and $x4856 W_S1_V3 W_S2_V4 $x767 $x3233 $x5893 $x4001 $x491 $x5948 $x812 $x3123)))
 (and $x700 $x512))))))))))))))))))))))))))))))))))))))
(check-sat)
