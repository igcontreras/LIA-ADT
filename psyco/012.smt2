; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let (($x4103 (not (and (not W_S2_V2) (not W_S2_V1)))))
 (let (($x2757 (forall ((V4_0 Int) )(forall ((V5_0 Int) )(forall ((V2_0 Int) )(forall ((V3_0 Int) )(forall ((V1_0 Int) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S2_V4 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((S1_V4_!110 Int) )(forall ((S2_V4_!115 Int) )(forall ((S2_V4_!120 Int) )(forall ((S2_V5_!116 Int) )(forall ((S2_V5_!121 Int) )(forall ((S1_V1_!114 Int) )(forall ((S1_V3_!113 Int) )(forall ((S1_V2_!112 Int) )(forall ((S2_V1_!119 Int) )(forall ((S2_V1_!124 Int) )(forall ((S2_V2_!117 Int) )(forall ((S2_V2_!122 Int) )(forall ((S2_V3_!118 Int) )(forall ((S2_V3_!123 Int) )(forall ((S1_V5_!111 Int) )(let ((?x621 (ite MW_S1_V1 S1_V1_!114 V1_0)))
 (let ((?x3258 (ite MW_S2_V1 S2_V1_!119 ?x621)))
 (let (($x3209 (= (ite MW_S2_V3 S2_V3_!118 (ite MW_S1_V3 S1_V3_!113 V3_0)) (ite MW_S2_V3 S2_V3_!123 V3_0))))
 (let ((?x1982 (ite MW_S2_V2 S2_V2_!122 V2_0)))
 (let ((?x2609 (ite MW_S1_V2 S1_V2_!112 V2_0)))
 (let ((?x724 (ite MW_S2_V2 S2_V2_!117 ?x2609)))
 (let (($x1585 (= ?x724 ?x1982)))
 (let (($x2817 (= (ite MW_S2_V5 S2_V5_!116 (ite MW_S1_V5 S1_V5_!111 V5_0)) (ite MW_S2_V5 S2_V5_!121 V5_0))))
 (let (($x1894 (= (ite MW_S2_V4 S2_V4_!115 (ite MW_S1_V4 S1_V4_!110 V4_0)) (ite MW_S2_V4 S2_V4_!120 V4_0))))
 (let (($x1949 (and $x1894 $x2817 $x1585 $x3209 (= ?x3258 (+ (- 1) (ite MW_S2_V1 S2_V1_!124 V1_0))))))
 (let (($x509 (and (not (<= V2_0 V1_0)) (>= ?x3258 (+ (- 1) ?x724)) (>= (ite MW_S2_V1 S2_V1_!124 V1_0) ?x1982))))
 (let (($x5992 (or (not MW_S2_V1) W_S2_V1)))
 (let (($x3428 (or (not MW_S1_V5) W_S1_V5)))
 (let (($x2022 (and (or (not R_S2_V4) (= (ite MW_S1_V4 S1_V4_!110 V4_0) V4_0)) (or (not R_S2_V5) (= (ite MW_S1_V5 S1_V5_!111 V5_0) V5_0)) (or (not R_S2_V2) (= ?x2609 V2_0)) (or (not R_S2_V3) (= (ite MW_S1_V3 S1_V3_!113 V3_0) V3_0)) (or (not R_S2_V1) (= ?x621 V1_0)))))
 (let (($x2543 (not $x2022)))
 (let (($x3032 (or $x2543 (= S2_V3_!118 S2_V3_!123))))
 (let (($x914 (or $x2543 (= S2_V2_!117 S2_V2_!122))))
 (let (($x922 (and (or (not R_S2_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!110 V4_0))) (or (not R_S2_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!111 V5_0))) (or (not R_S2_V2) (= V2_0 ?x2609)) (or (not R_S2_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!113 V3_0))) (or (not R_S2_V1) (= V1_0 ?x621)))))
 (let (($x890 (or (not $x922) (= S2_V1_!124 S2_V1_!119))))
 (let (($x4248 (or $x2543 (= S2_V5_!116 S2_V5_!121))))
 (let (($x4945 (or $x2543 (= S2_V4_!115 S2_V4_!120))))
 (let (($x5744 (and $x4945 $x4248 $x890 $x914 $x3032 (or (not MW_S1_V4) W_S1_V4) $x3428 (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S2_V5) W_S2_V5) (or (not MW_S2_V2) W_S2_V2) (or (not MW_S2_V3) W_S2_V3) $x5992)))
 (or (not $x5744) (not $x509) $x1949))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x554 (and W_S2_V1 R_S2_V1)))
 (let (($x320 (and W_S2_V3 R_S2_V3)))
 (let (($x2372 (and W_S2_V2 R_S2_V2)))
 (let (($x5092 (and W_S2_V5 R_S2_V5)))
 (let (($x1710 (= DISJ_W_S2_R_S2 (not (or R_S2_V4 $x5092 $x2372 $x320 $x554)))))
 (let (($x851 (and W_S2_V1 R_S1_V1)))
 (let (($x2005 (and W_S2_V3 R_S1_V3)))
 (let (($x3493 (and W_S2_V2 R_S1_V2)))
 (let (($x5363 (and W_S2_V5 R_S1_V5)))
 (let (($x5847 (= DISJ_W_S2_R_S1 (not (or R_S1_V4 $x5363 $x3493 $x2005 $x851)))))
 (let (($x2115 (and W_S1_V1 W_S2_V1)))
 (let (($x5511 (and W_S1_V2 W_S2_V2)))
 (let (($x1393 (and W_S1_V5 W_S2_V5)))
 (let (($x1885 (= DISJ_W_S1_W_S2 (not (or W_S1_V4 $x1393 $x5511 W_S2_V3 $x2115)))))
 (let (($x4905 (and W_S1_V1 R_S2_V1)))
 (let (($x2163 (and W_S1_V2 R_S2_V2)))
 (let (($x1808 (and W_S1_V5 R_S2_V5)))
 (let (($x1952 (and W_S1_V4 R_S2_V4)))
 (let (($x3727 (= DISJ_W_S1_R_S2 (not (or $x1952 $x1808 $x2163 R_S2_V3 $x4905)))))
 (let (($x2399 (and W_S1_V1 R_S1_V1)))
 (let (($x2671 (and W_S1_V2 R_S1_V2)))
 (let (($x5026 (and W_S1_V5 R_S1_V5)))
 (let (($x2048 (and W_S1_V4 R_S1_V4)))
 (let (($x4557 (= DISJ_W_S1_R_S1 (not (or $x2048 $x5026 $x2671 R_S1_V3 $x2399)))))
 (and (and W_S1_V3 W_S2_V4 $x4557 $x3727 $x1885 $x5847 $x1710 $x2757) $x4103))))))))))))))))))))))))))))
(check-sat)
