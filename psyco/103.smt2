; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S1_V6 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E2_V3 () Bool)
(declare-fun R_E2_V1 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(declare-fun R_E1_V6 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun R_S1_V6 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun R_E2_V6 () Bool)
(declare-fun R_E2_V4 () Bool)
(declare-fun R_E2_V5 () Bool)
(declare-fun R_E2_V2 () Bool)
(declare-fun DISJ_W_S1_R_E2 () Bool)
(declare-fun W_S1_V5 () Bool)
(assert
 (let (($x1213 (forall ((V1_0 Int) )(forall ((V3_0 Int) )(forall ((V2_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S1_V6 Bool) )(forall ((E1_!4904 Int) )(forall ((E1_!4907 Int) )(forall ((E1_!4909 Int) )(forall ((E2_!4905 Int) )(forall ((E2_!4906 Int) )(forall ((E2_!4908 Int) )(let (($x2050 (and (not (<= V4_0 E2_!4905)) (not (<= V2_0 E1_!4904)) (>= E2_!4906 V4_0) (>= E1_!4904 (+ (- 1) V2_0)) (not (<= V2_0 E1_!4907)) (not (<= V4_0 E2_!4908)) (>= E1_!4909 V2_0) (>= E2_!4908 (+ (- 1) V4_0)))))
 (let (($x793 (not MW_S1_V6)))
 (let (($x3434 (or $x793 W_S1_V6)))
 (let (($x2799 (= E2_!4908 E2_!4906)))
 (let (($x1138 (not R_E2_V3)))
 (let (($x135 (or $x1138 (= V3_0 E2_!4905))))
 (let (($x2582 (not R_E2_V1)))
 (let (($x2743 (or $x2582 (= E1_!4907 E1_!4904))))
 (let (($x1885 (or (not (and $x2743 $x135)) $x2799)))
 (let (($x5416 (= E2_!4908 E2_!4905)))
 (let (($x1118 (or (not $x2743) $x5416)))
 (let (($x2237 (or (not $x135) (= E2_!4905 E2_!4906))))
 (let (($x3367 (not R_E1_V3)))
 (let (($x2869 (or $x3367 (= E2_!4908 V3_0))))
 (let (($x6013 (or (not (and (or (not R_E1_V1) (= E1_!4907 V1_0)) $x2869)) (= E1_!4909 E1_!4907))))
 (let (($x2716 (= E1_!4904 E1_!4909)))
 (let (($x1961 (not (and (or (not R_E1_V1) (= V1_0 E1_!4907)) (or $x3367 (= V3_0 E2_!4908))))))
 (let (($x2327 (or $x1961 $x2716)))
 (let (($x4803 (and (= E1_!4904 E1_!4907) $x2327 $x6013 $x2237 $x1118 $x1885 (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V3) W_S1_V3) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V4) W_S1_V4) $x3434)))
 (or (not $x4803) (not $x2050) (and (= E1_!4904 (+ (- 1) E1_!4909)) (= E2_!4906 (+ 1 E2_!4908))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x564 (and W_S1_V6 R_E1_V6)))
 (let (($x2645 (and W_S1_V4 R_E1_V4)))
 (let (($x2090 (and W_S1_V2 R_E1_V2)))
 (let (($x1745 (and W_S1_V3 R_E1_V3)))
 (let (($x5896 (and W_S1_V1 R_E1_V1)))
 (let (($x4616 (= DISJ_W_S1_R_E1 (not (or $x5896 $x1745 $x2090 R_E1_V5 $x2645 $x564)))))
 (let (($x4796 (and W_S1_V6 R_S1_V6)))
 (let (($x2706 (and W_S1_V4 R_S1_V4)))
 (let (($x2059 (and W_S1_V2 R_S1_V2)))
 (let (($x1739 (and W_S1_V3 R_S1_V3)))
 (let (($x1792 (and W_S1_V1 R_S1_V1)))
 (let (($x545 (= DISJ_W_S1_R_S1 (not (or $x1792 $x1739 $x2059 R_S1_V5 $x2706 $x4796)))))
 (let (($x2025 (and W_S1_V6 R_E2_V6)))
 (let (($x792 (and W_S1_V4 R_E2_V4)))
 (let (($x398 (and W_S1_V2 R_E2_V2)))
 (let (($x4982 (and W_S1_V3 R_E2_V3)))
 (let (($x2812 (and W_S1_V1 R_E2_V1)))
 (let (($x1258 (= DISJ_W_S1_R_E2 (not (or $x2812 $x4982 $x398 R_E2_V5 $x792 $x2025)))))
 (and W_S1_V5 $x1258 $x545 $x4616 $x1213)))))))))))))))))))))
(check-sat)
