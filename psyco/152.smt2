; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V8 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_E1_V7 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(declare-fun R_E1_V8 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun R_S1_V7 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V8 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V7 () Bool)
(assert
 (let (($x6000 (not (and (not W_S1_V3) (not W_S1_V4)))))
 (let (($x1506 (forall ((V8_0 Int) )(forall ((V1_0 Int) )(forall ((V2_0 Int) )(forall ((V4_0 Int) )(forall ((V7_0 Int) )(forall ((MW_S1_V8 Bool) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S1_V7 Bool) )(forall ((S1_V1_!5808 Int) )(forall ((S1_V1_!5815 Int) )(forall ((S1_V3_!5809 Int) )(forall ((S1_V3_!5816 Int) )(forall ((S1_V2_!5810 Int) )(forall ((S1_V2_!5817 Int) )(forall ((E1_!5806 Int) )(forall ((E1_!5813 Int) )(forall ((S1_V8_!5807 Int) )(forall ((S1_V8_!5814 Int) )(forall ((S1_V4_!5811 Int) )(forall ((S1_V4_!5818 Int) )(forall ((S1_V7_!5812 Int) )(forall ((S1_V7_!5819 Int) )(let (($x1689 (and (= (ite MW_S1_V8 S1_V8_!5807 V8_0) (ite MW_S1_V8 S1_V8_!5814 V8_0)) (= (ite MW_S1_V1 S1_V1_!5808 V1_0) (ite MW_S1_V1 S1_V1_!5815 V1_0)) (= (ite MW_S1_V3 S1_V3_!5809 E1_!5806) (+ (- 1) (ite MW_S1_V4 S1_V4_!5818 V4_0))) (= (ite MW_S1_V2 S1_V2_!5810 V2_0) (ite MW_S1_V2 S1_V2_!5817 V2_0)) (= (ite MW_S1_V4 S1_V4_!5811 V4_0) (ite MW_S1_V4 S1_V4_!5818 V4_0)) (= (ite MW_S1_V7 S1_V7_!5812 V7_0) (ite MW_S1_V7 S1_V7_!5819 V7_0)))))
 (let (($x1045 (and (not (<= V2_0 V1_0)) (not (<= V4_0 E1_!5806)) (>= (ite MW_S1_V3 S1_V3_!5809 E1_!5806) (+ (- 1) (ite MW_S1_V4 S1_V4_!5811 V4_0))) (>= (ite MW_S1_V1 S1_V1_!5808 V1_0) (+ (- 1) (ite MW_S1_V2 S1_V2_!5810 V2_0))) (not (<= V4_0 E1_!5813)) (>= E1_!5813 (+ (- 1) (ite MW_S1_V4 S1_V4_!5818 V4_0))) (>= (ite MW_S1_V1 S1_V1_!5815 V1_0) (+ (- 1) (ite MW_S1_V2 S1_V2_!5817 V2_0))))))
 (let (($x1944 (= E1_!5806 E1_!5813)))
 (let (($x6024 (and (or (not (or (not R_S1_V3) $x1944)) (= S1_V1_!5808 S1_V1_!5815)) (or (not (or (not R_S1_V3) $x1944)) (= S1_V3_!5809 S1_V3_!5816)) (or (not (or (not R_S1_V3) (= E1_!5813 E1_!5806))) (= S1_V2_!5817 S1_V2_!5810)) $x1944 (or (not (or (not R_S1_V3) $x1944)) (= S1_V8_!5807 S1_V8_!5814)) (or (not (or (not R_S1_V3) (= E1_!5813 E1_!5806))) (= S1_V4_!5818 S1_V4_!5811)) (or (not (or (not R_S1_V3) $x1944)) (= S1_V7_!5812 S1_V7_!5819)) (or (not MW_S1_V8) W_S1_V8) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V3) W_S1_V3) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V4) W_S1_V4))))
 (or (not $x6024) (not $x1045) $x1689))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x1105 (and W_S1_V4 R_E1_V4)))
 (let (($x1166 (and W_S1_V2 R_E1_V2)))
 (let (($x1888 (and W_S1_V3 R_E1_V3)))
 (let (($x5280 (and W_S1_V1 R_E1_V1)))
 (let (($x3710 (and W_S1_V8 R_E1_V8)))
 (let (($x745 (= DISJ_W_S1_R_E1 (not (or $x3710 $x5280 $x1888 $x1166 $x1105 R_E1_V7)))))
 (let (($x1961 (and W_S1_V4 R_S1_V4)))
 (let (($x2312 (and W_S1_V2 R_S1_V2)))
 (let (($x5507 (and W_S1_V3 R_S1_V3)))
 (let (($x1809 (and W_S1_V1 R_S1_V1)))
 (let (($x2410 (and W_S1_V8 R_S1_V8)))
 (let (($x687 (= DISJ_W_S1_R_S1 (not (or $x2410 $x1809 $x5507 $x2312 $x1961 R_S1_V7)))))
 (and (and W_S1_V7 $x687 $x745 $x1506) $x6000))))))))))))))))
(check-sat)
