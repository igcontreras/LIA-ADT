; benchmark generated from python API
(set-info :status unknown)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let (($x3289 (not (and (not R_S1_V1) DISJ_W_S1_R_S1))))
 (let (($x1662 (not (and (not W_S1_V1) (not W_S1_V2)))))
 (let (($x993 (not (and (not W_S1_V2) DISJ_W_S1_R_S1))))
 (let (($x2754 (forall ((V1_0 Int) )(forall ((V3_0 Int) )(forall ((V2_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((S1_V3_!137 Int) )(forall ((S1_V3_!141 Int) )(forall ((S1_V3_!145 Int) )(forall ((S1_V3_!149 Int) )(forall ((S1_V4_!139 Int) )(forall ((S1_V4_!143 Int) )(forall ((S1_V4_!147 Int) )(forall ((S1_V4_!151 Int) )(forall ((S1_V1_!136 Int) )(forall ((S1_V1_!140 Int) )(forall ((S1_V1_!144 Int) )(forall ((S1_V1_!148 Int) )(forall ((S1_V2_!138 Int) )(forall ((S1_V2_!142 Int) )(forall ((S1_V2_!146 Int) )(forall ((S1_V2_!150 Int) )(let ((?x2445 (ite MW_S1_V1 S1_V1_!140 V1_0)))
 (let ((?x4918 (+ 1 ?x2445)))
 (let ((?x5652 (ite MW_S1_V1 S1_V1_!144 ?x4918)))
 (let ((?x5878 (+ 1 ?x5652)))
 (let ((?x5739 (ite MW_S1_V1 S1_V1_!136 V1_0)))
 (let (($x931 (and (= ?x5739 (ite MW_S1_V1 S1_V1_!148 ?x5878)) (= (ite MW_S1_V3 S1_V3_!137 V3_0) (ite MW_S1_V3 S1_V3_!149 V3_0)) (= (ite MW_S1_V2 S1_V2_!138 V2_0) (ite MW_S1_V2 S1_V2_!150 V2_0)) (= (ite MW_S1_V4 S1_V4_!139 V4_0) (ite MW_S1_V4 S1_V4_!151 V4_0)))))
 (let (($x3044 (and (not (<= V2_0 V1_0)) (>= ?x5739 (+ (- 1) (ite MW_S1_V2 S1_V2_!138 V2_0))) (not (<= V2_0 (+ 1 V1_0))) (>= ?x5652 (+ (- 2) (ite MW_S1_V2 S1_V2_!146 V2_0))) (not (<= (ite MW_S1_V2 S1_V2_!146 V2_0) ?x5878)))))
 (let (($x3797 (= S1_V2_!150 S1_V2_!146)))
 (let (($x1063 (and (or (not R_S1_V1) (= ?x5652 ?x2445)) (or (not R_S1_V3) (= (ite MW_S1_V3 S1_V3_!145 V3_0) (ite MW_S1_V3 S1_V3_!141 V3_0))) (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!146 V2_0) (ite MW_S1_V2 S1_V2_!142 V2_0))) (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!147 V4_0) (ite MW_S1_V4 S1_V4_!143 V4_0))))))
 (let (($x1796 (not $x1063)))
 (let (($x694 (= S1_V2_!150 S1_V2_!142)))
 (let (($x755 (and (or (not R_S1_V1) (= ?x5652 (+ (- 1) V1_0))) (or (not R_S1_V3) (= (ite MW_S1_V3 S1_V3_!145 V3_0) V3_0)) (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!146 V2_0) V2_0)) (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!147 V4_0) V4_0)))))
 (let (($x5135 (not $x755)))
 (let (($x676 (= S1_V2_!142 S1_V2_!146)))
 (let (($x4411 (and (or (not R_S1_V1) (= V1_0 ?x4918)) (or (not R_S1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!141 V3_0))) (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!142 V2_0))) (or (not R_S1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!143 V4_0))))))
 (let (($x505 (not $x4411)))
 (let (($x5828 (and (or (not R_S1_V1) (= V1_0 ?x5878)) (or (not R_S1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!145 V3_0))) (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!146 V2_0))) (or (not R_S1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!147 V4_0))))))
 (let (($x1954 (not $x5828)))
 (let (($x1855 (= S1_V1_!136 S1_V1_!140)))
 (let (($x5220 (and (or (not R_S1_V1) (= ?x2445 ?x5652)) (or (not R_S1_V3) (= (ite MW_S1_V3 S1_V3_!141 V3_0) (ite MW_S1_V3 S1_V3_!145 V3_0))) (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!142 V2_0) (ite MW_S1_V2 S1_V2_!146 V2_0))) (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!143 V4_0) (ite MW_S1_V4 S1_V4_!147 V4_0))))))
 (let (($x1877 (= S1_V4_!143 S1_V4_!139)))
 (let (($x338 (and (or (not R_S1_V1) (= ?x2445 (+ (- 1) V1_0))) (or (not R_S1_V3) (= (ite MW_S1_V3 S1_V3_!141 V3_0) V3_0)) (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!142 V2_0) V2_0)) (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!143 V4_0) V4_0)))))
 (let (($x3538 (and (= S1_V3_!141 S1_V3_!137) (or $x505 (= S1_V3_!141 S1_V3_!145)) (or $x1954 (= S1_V3_!141 S1_V3_!149)) (or (not $x338) (= S1_V3_!145 S1_V3_!137)) (or $x5135 (= S1_V3_!149 S1_V3_!137)) (or $x1796 (= S1_V3_!149 S1_V3_!145)) (or $x505 (= S1_V4_!139 S1_V4_!147)) (or $x1954 (= S1_V4_!139 S1_V4_!151)) $x1877 (or $x505 (= S1_V4_!143 S1_V4_!147)) (or $x1954 (= S1_V4_!143 S1_V4_!151)) (or (not $x5220) (= S1_V4_!147 S1_V4_!151)) $x1855 (or $x505 (= S1_V1_!136 S1_V1_!144)) (or $x1954 (= S1_V1_!136 S1_V1_!148)) (or $x505 (= S1_V1_!140 S1_V1_!144)) (or $x1954 (= S1_V1_!140 S1_V1_!148)) (or $x1796 (= S1_V1_!148 S1_V1_!144)) (or $x505 (= S1_V2_!138 S1_V2_!146)) (= S1_V2_!142 S1_V2_!138) (or $x505 $x676) (or $x5135 (= S1_V2_!150 S1_V2_!138)) (or $x5135 $x694) (or $x1796 $x3797) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V4) W_S1_V4))))
 (or (not $x3538) (not $x3044) $x931)))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x2061 (and W_S1_V4 R_S1_V4)))
 (let (($x5814 (and W_S1_V2 R_S1_V2)))
 (let (($x3137 (and W_S1_V1 R_S1_V1)))
 (let (($x2649 (= DISJ_W_S1_R_S1 (not (or $x3137 R_S1_V3 $x5814 $x2061)))))
 (and (and W_S1_V3 $x2649 $x2754) $x993 $x1662 $x3289))))))))))
(check-sat)
