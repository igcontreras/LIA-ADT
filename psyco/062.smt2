; benchmark generated from python API
(set-info :status unknown)
(declare-fun R_E1_V1 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun DISJ_W_S2_R_E1 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let (($x94 (forall ((V1_0 Int) )(forall ((V2_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((E1_!336 Int) )(forall ((E1_!337 Int) )(forall ((E1_!338 Int) )(let (($x3081 (= E1_!337 E1_!338)))
 (let (($x2095 (not MW_S2_V5)))
 (let (($x927 (or $x2095 W_S2_V5)))
 (let (($x925 (not MW_S2_V3)))
 (let (($x3190 (or $x925 W_S2_V3)))
 (let (($x84 (not MW_S1_V4)))
 (let (($x5159 (or $x84 W_S1_V4)))
 (let (($x2895 (not MW_S1_V5)))
 (let (($x1992 (or $x2895 W_S1_V5)))
 (let (($x570 (= E1_!338 E1_!337)))
 (let (($x3989 (not (or (not R_E1_V1) (= V1_0 E1_!336)))))
 (let (($x2469 (or $x3989 $x570)))
 (let (($x746 (or $x3989 (= E1_!336 E1_!337))))
 (let (($x5129 (and $x746 (= E1_!338 E1_!336) $x2469 (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) $x1992 $x5159 (or (not MW_S2_V1) W_S2_V1) $x3190 (or (not MW_S2_V2) W_S2_V2) $x927)))
 (or (not $x5129) (not (and (>= E1_!336 V2_0) (>= E1_!337 V2_0) (>= E1_!338 V2_0))) $x3081))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x4982 (and W_S2_V5 R_E1_V5)))
 (let (($x1751 (and W_S2_V2 R_E1_V2)))
 (let (($x666 (and W_S2_V3 R_E1_V3)))
 (let (($x856 (and W_S2_V1 R_E1_V1)))
 (let (($x3308 (= DISJ_W_S2_R_E1 (not (or $x856 $x666 $x1751 $x4982 R_E1_V4)))))
 (let (($x5218 (and W_S2_V5 R_S2_V5)))
 (let (($x3221 (and W_S2_V2 R_S2_V2)))
 (let (($x2830 (and W_S2_V3 R_S2_V3)))
 (let (($x714 (and W_S2_V1 R_S2_V1)))
 (let (($x5992 (= DISJ_W_S2_R_S2 (not (or $x714 $x2830 $x3221 $x5218 R_S2_V4)))))
 (let (($x3928 (and W_S2_V5 R_S1_V5)))
 (let (($x4924 (and W_S2_V2 R_S1_V2)))
 (let (($x169 (and W_S2_V3 R_S1_V3)))
 (let (($x147 (and W_S2_V1 R_S1_V1)))
 (let (($x4364 (= DISJ_W_S2_R_S1 (not (or $x147 $x169 $x4924 $x3928 R_S1_V4)))))
 (let (($x2571 (and W_S1_V5 W_S2_V5)))
 (let (($x206 (and W_S1_V2 W_S2_V2)))
 (let (($x1291 (and W_S1_V1 W_S2_V1)))
 (let (($x2259 (= DISJ_W_S1_W_S2 (not (or $x1291 W_S2_V3 $x206 $x2571 W_S1_V4)))))
 (let (($x3324 (and W_S1_V4 R_E1_V4)))
 (let (($x2109 (and W_S1_V5 R_E1_V5)))
 (let (($x5853 (and W_S1_V2 R_E1_V2)))
 (let (($x367 (and W_S1_V1 R_E1_V1)))
 (let (($x766 (= DISJ_W_S1_R_E1 (not (or $x367 R_E1_V3 $x5853 $x2109 $x3324)))))
 (let (($x5932 (and W_S1_V4 R_S2_V4)))
 (let (($x4753 (and W_S1_V5 R_S2_V5)))
 (let (($x171 (and W_S1_V2 R_S2_V2)))
 (let (($x6032 (and W_S1_V1 R_S2_V1)))
 (let (($x1605 (= DISJ_W_S1_R_S2 (not (or $x6032 R_S2_V3 $x171 $x4753 $x5932)))))
 (let (($x2433 (and W_S1_V4 R_S1_V4)))
 (let (($x3194 (and W_S1_V5 R_S1_V5)))
 (let (($x4798 (and W_S1_V2 R_S1_V2)))
 (let (($x5102 (and W_S1_V1 R_S1_V1)))
 (let (($x2616 (= DISJ_W_S1_R_S1 (not (or $x5102 R_S1_V3 $x4798 $x3194 $x2433)))))
 (and (and W_S1_V3 W_S2_V4 $x2616 $x1605 $x766 $x2259 $x4364 $x5992 $x3308 $x94) R_E1_V1)))))))))))))))))))))))))))))))))))))
(check-sat)
