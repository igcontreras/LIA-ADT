; benchmark generated from python API
(set-info :status unknown)
(declare-fun R_E1_V1 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun DISJ_W_S2_R_E1 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let (($x2519 (forall ((V1_0 Int) )(forall ((V2_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((E1_!336 Int) )(forall ((E1_!337 Int) )(forall ((E1_!338 Int) )(let (($x3359 (= E1_!336 E1_!338)))
 (let (($x1646 (not MW_S2_V2)))
 (let (($x1644 (or $x1646 W_S2_V2)))
 (let (($x89 (not MW_S2_V3)))
 (let (($x3098 (or $x89 W_S2_V3)))
 (let (($x608 (not MW_S1_V4)))
 (let (($x2770 (or $x608 W_S1_V4)))
 (let (($x2733 (= E1_!338 E1_!337)))
 (let (($x2187 (not (or (not R_E1_V1) (= E1_!337 V1_0)))))
 (let (($x3306 (or $x2187 $x2733)))
 (let (($x2265 (= E1_!338 E1_!336)))
 (let (($x3275 (or $x2187 $x2265)))
 (let (($x3005 (and (= E1_!337 E1_!336) $x3275 $x3306 (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V5) W_S1_V5) $x2770 (or (not MW_S2_V1) W_S2_V1) $x3098 $x1644 (or (not MW_S2_V5) W_S2_V5))))
 (or (not $x3005) (not (and (>= E1_!336 V2_0) (>= E1_!337 V2_0) (>= E1_!338 V2_0))) $x3359)))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x1534 (and W_S2_V5 R_E1_V5)))
 (let (($x4705 (and W_S2_V2 R_E1_V2)))
 (let (($x1156 (and W_S2_V3 R_E1_V3)))
 (let (($x1361 (and W_S2_V1 R_E1_V1)))
 (let (($x3856 (= DISJ_W_S2_R_E1 (not (or $x1361 $x1156 $x4705 $x1534 R_E1_V4)))))
 (let (($x4164 (and W_S2_V5 R_S2_V5)))
 (let (($x6034 (and W_S2_V2 R_S2_V2)))
 (let (($x2279 (and W_S2_V3 R_S2_V3)))
 (let (($x274 (and W_S2_V1 R_S2_V1)))
 (let (($x3698 (= DISJ_W_S2_R_S2 (not (or $x274 $x2279 $x6034 $x4164 R_S2_V4)))))
 (let (($x3308 (and W_S2_V5 R_S1_V5)))
 (let (($x1276 (and W_S2_V2 R_S1_V2)))
 (let (($x3173 (and W_S2_V3 R_S1_V3)))
 (let (($x1716 (and W_S2_V1 R_S1_V1)))
 (let (($x512 (= DISJ_W_S2_R_S1 (not (or $x1716 $x3173 $x1276 $x3308 R_S1_V4)))))
 (let (($x5855 (and W_S1_V5 W_S2_V5)))
 (let (($x2793 (and W_S1_V2 W_S2_V2)))
 (let (($x2476 (and W_S1_V1 W_S2_V1)))
 (let (($x2759 (= DISJ_W_S1_W_S2 (not (or $x2476 W_S2_V3 $x2793 $x5855 W_S1_V4)))))
 (let (($x18 (and W_S1_V4 R_E1_V4)))
 (let (($x5938 (and W_S1_V5 R_E1_V5)))
 (let (($x5929 (and W_S1_V2 R_E1_V2)))
 (let (($x106 (and W_S1_V1 R_E1_V1)))
 (let (($x2057 (= DISJ_W_S1_R_E1 (not (or $x106 R_E1_V3 $x5929 $x5938 $x18)))))
 (let (($x3466 (and W_S1_V4 R_S2_V4)))
 (let (($x3842 (and W_S1_V5 R_S2_V5)))
 (let (($x2124 (and W_S1_V2 R_S2_V2)))
 (let (($x2797 (and W_S1_V1 R_S2_V1)))
 (let (($x2283 (= DISJ_W_S1_R_S2 (not (or $x2797 R_S2_V3 $x2124 $x3842 $x3466)))))
 (let (($x3624 (and W_S1_V4 R_S1_V4)))
 (let (($x1659 (and W_S1_V5 R_S1_V5)))
 (let (($x871 (and W_S1_V2 R_S1_V2)))
 (let (($x4268 (and W_S1_V1 R_S1_V1)))
 (let (($x2382 (= DISJ_W_S1_R_S1 (not (or $x4268 R_S1_V3 $x871 $x1659 $x3624)))))
 (and (and W_S1_V3 W_S2_V4 $x2382 $x2283 $x2057 $x2759 $x512 $x3698 $x3856 $x2519) R_E1_V1)))))))))))))))))))))))))))))))))))))
(check-sat)
