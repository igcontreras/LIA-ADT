; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let (($x6081 (forall ((V1_0 Int) )(forall ((V3_0 Int) )(forall ((V2_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((S1_V3_!507 Int) )(forall ((S1_V3_!511 Int) )(forall ((S1_V3_!515 Int) )(forall ((S1_V4_!509 Int) )(forall ((S1_V4_!513 Int) )(forall ((S1_V4_!517 Int) )(forall ((S1_V1_!506 Int) )(forall ((S1_V1_!510 Int) )(forall ((S1_V1_!514 Int) )(forall ((S1_V2_!508 Int) )(forall ((S1_V2_!512 Int) )(forall ((S1_V2_!516 Int) )(let ((?x4996 (ite MW_S1_V1 S1_V1_!510 V1_0)))
 (let ((?x1604 (+ 1 ?x4996)))
 (let ((?x938 (ite MW_S1_V1 S1_V1_!514 ?x1604)))
 (let ((?x1253 (ite MW_S1_V1 S1_V1_!506 V1_0)))
 (let (($x3606 (and (= ?x1253 ?x938) (= (ite MW_S1_V3 S1_V3_!507 V3_0) (ite MW_S1_V3 S1_V3_!515 V3_0)) (= (ite MW_S1_V2 S1_V2_!508 V2_0) (ite MW_S1_V2 S1_V2_!516 V2_0)) (= (ite MW_S1_V4 S1_V4_!509 V4_0) (ite MW_S1_V4 S1_V4_!517 V4_0)))))
 (let (($x5910 (and (not (<= V2_0 V1_0)) (>= ?x1253 (+ (- 1) (ite MW_S1_V2 S1_V2_!508 V2_0))) (not (<= V2_0 (+ 1 V1_0))) (>= ?x938 (+ (- 2) (ite MW_S1_V2 S1_V2_!516 V2_0))) (>= ?x938 (+ (- 1) (ite MW_S1_V2 S1_V2_!516 V2_0))))))
 (let (($x1886 (= S1_V2_!512 S1_V2_!516)))
 (let (($x579 (and (or (not R_S1_V1) (= V1_0 ?x1604)) (or (not R_S1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!511 V3_0))) (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!512 V2_0))) (or (not R_S1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!513 V4_0))))))
 (let (($x2346 (not $x579)))
 (let (($x1916 (and (or (not R_S1_V1) (= ?x4996 (+ (- 1) V1_0))) (or (not R_S1_V3) (= (ite MW_S1_V3 S1_V3_!511 V3_0) V3_0)) (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!512 V2_0) V2_0)) (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!513 V4_0) V4_0)))))
 (let (($x209 (not $x1916)))
 (let (($x795 (= S1_V1_!510 S1_V1_!506)))
 (let (($x2428 (and (= S1_V3_!511 S1_V3_!507) (or $x209 (= S1_V3_!515 S1_V3_!507)) (or $x209 (= S1_V3_!515 S1_V3_!511)) (= S1_V4_!509 S1_V4_!513) (or $x2346 (= S1_V4_!509 S1_V4_!517)) (or $x209 (= S1_V4_!517 S1_V4_!513)) $x795 (or $x2346 (= S1_V1_!510 S1_V1_!514)) (or $x209 (= S1_V1_!514 S1_V1_!506)) (or $x2346 (= S1_V2_!508 S1_V2_!516)) (= S1_V2_!512 S1_V2_!508) (or $x2346 $x1886) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V4) W_S1_V4))))
 (or (not $x2428) (not $x5910) $x3606)))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x342 (and W_S1_V4 R_S1_V4)))
 (let (($x2308 (and W_S1_V2 R_S1_V2)))
 (let (($x5233 (and W_S1_V1 R_S1_V1)))
 (let (($x1741 (= DISJ_W_S1_R_S1 (not (or $x5233 R_S1_V3 $x2308 $x342)))))
 (let (($x120 (not R_S1_V1)))
 (let (($x4742 (and $x120 DISJ_W_S1_R_S1)))
 (let (($x4282 (not W_S1_V2)))
 (let (($x2212 (not W_S1_V1)))
 (let (($x483 (and $x2212 $x4282)))
 (let (($x3571 (and $x4282 DISJ_W_S1_R_S1)))
 (let (($x2696 (or $x3571 $x483 $x4742)))
 (and (and $x2696 W_S1_V3 $x1741 $x6081) W_S1_V2))))))))))))))
(check-sat)
