; benchmark generated from python API
(set-info :status unknown)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S2_V2 () Bool)
(assert
 (let (($x2027 (not (and DISJ_W_S1_R_S2 DISJ_W_S1_W_S2 DISJ_W_S2_R_S1))))
 (let (($x2339 (forall ((V4_0 Int) )(forall ((V5_0 Int) )(forall ((V2_0 Int) )(forall ((V3_0 Int) )(forall ((V1_0 Int) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S2_V4 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((S1_V4_!400 Int) )(forall ((S1_V4_!415 Int) )(forall ((S2_V4_!405 Int) )(forall ((S2_V4_!410 Int) )(forall ((S2_V5_!406 Int) )(forall ((S2_V5_!411 Int) )(forall ((S1_V1_!404 Int) )(forall ((S1_V1_!419 Int) )(forall ((S1_V3_!403 Int) )(forall ((S1_V3_!418 Int) )(forall ((S1_V2_!402 Int) )(forall ((S1_V2_!417 Int) )(forall ((S2_V1_!409 Int) )(forall ((S2_V1_!414 Int) )(forall ((S2_V2_!407 Int) )(forall ((S2_V2_!412 Int) )(forall ((S2_V3_!408 Int) )(forall ((S2_V3_!413 Int) )(forall ((S1_V5_!401 Int) )(forall ((S1_V5_!416 Int) )(let ((?x337 (ite MW_S2_V1 S2_V1_!414 V1_0)))
 (let ((?x3808 (ite MW_S1_V1 S1_V1_!419 ?x337)))
 (let ((?x4083 (ite MW_S1_V1 S1_V1_!404 V1_0)))
 (let ((?x5321 (ite MW_S2_V1 S2_V1_!409 ?x4083)))
 (let (($x2076 (= (ite MW_S2_V3 S2_V3_!408 (ite MW_S1_V3 S1_V3_!403 V3_0)) (ite MW_S1_V3 S1_V3_!418 (ite MW_S2_V3 S2_V3_!413 V3_0)))))
 (let ((?x2905 (ite MW_S2_V2 S2_V2_!412 V2_0)))
 (let ((?x2673 (ite MW_S1_V2 S1_V2_!417 ?x2905)))
 (let ((?x5843 (ite MW_S1_V2 S1_V2_!402 V2_0)))
 (let ((?x1842 (ite MW_S2_V2 S2_V2_!407 ?x5843)))
 (let (($x947 (= (ite MW_S2_V5 S2_V5_!406 (ite MW_S1_V5 S1_V5_!401 V5_0)) (ite MW_S1_V5 S1_V5_!416 (ite MW_S2_V5 S2_V5_!411 V5_0)))))
 (let (($x5040 (= (ite MW_S2_V4 S2_V4_!405 (ite MW_S1_V4 S1_V4_!400 V4_0)) (ite MW_S1_V4 S1_V4_!415 (ite MW_S2_V4 S2_V4_!410 V4_0)))))
 (let (($x2435 (and (not (<= V2_0 V1_0)) (>= ?x5321 (+ (- 1) ?x1842)) (not (<= ?x2905 ?x337)) (>= ?x3808 (+ (- 1) ?x2673)))))
 (let (($x1609 (not MW_S2_V1)))
 (let (($x1715 (not MW_S2_V2)))
 (let (($x2671 (= S1_V5_!416 S1_V5_!401)))
 (let (($x1268 (and (or (not R_S1_V4) (= (ite MW_S2_V4 S2_V4_!410 V4_0) V4_0)) (or (not R_S1_V5) (= (ite MW_S2_V5 S2_V5_!411 V5_0) V5_0)) (or (not R_S1_V2) (= ?x2905 V2_0)) (or (not R_S1_V3) (= (ite MW_S2_V3 S2_V3_!413 V3_0) V3_0)) (or (not R_S1_V1) (= ?x337 V1_0)))))
 (let (($x2022 (not $x1268)))
 (let (($x3141 (= S2_V3_!408 S2_V3_!413)))
 (let (($x1729 (and (or (not R_S2_V4) (= (ite MW_S1_V4 S1_V4_!400 V4_0) V4_0)) (or (not R_S2_V5) (= (ite MW_S1_V5 S1_V5_!401 V5_0) V5_0)) (or (not R_S2_V2) (= ?x5843 V2_0)) (or (not R_S2_V3) (= (ite MW_S1_V3 S1_V3_!403 V3_0) V3_0)) (or (not R_S2_V1) (= ?x4083 V1_0)))))
 (let (($x5780 (not $x1729)))
 (let (($x3050 (= S2_V4_!410 S2_V4_!405)))
 (let (($x2042 (and (or (not R_S2_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!400 V4_0))) (or (not R_S2_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!401 V5_0))) (or (not R_S2_V2) (= V2_0 ?x5843)) (or (not R_S2_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!403 V3_0))) (or (not R_S2_V1) (= V1_0 ?x4083)))))
 (let (($x4809 (and (or $x2022 (= S1_V4_!415 S1_V4_!400)) (or (not $x2042) $x3050) (or $x5780 (= S2_V5_!406 S2_V5_!411)) (or $x2022 (= S1_V1_!419 S1_V1_!404)) (or $x2022 (= S1_V3_!418 S1_V3_!403)) (or $x2022 (= S1_V2_!417 S1_V2_!402)) (or $x5780 (= S2_V1_!409 S2_V1_!414)) (or $x5780 (= S2_V2_!407 S2_V2_!412)) (or $x5780 $x3141) (or $x2022 $x2671) (or (not MW_S1_V4) W_S1_V4) (or (not MW_S1_V5) W_S1_V5) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S2_V5) W_S2_V5) $x1715 (or (not MW_S2_V3) W_S2_V3) $x1609)))
 (or (not $x4809) (not $x2435) (and $x5040 $x947 (= ?x1842 ?x2673) $x2076 (= ?x5321 ?x3808)))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x1472 (not (or R_S2_V4 (and W_S2_V5 R_S2_V5) (and W_S2_V3 R_S2_V3)))))
 (let (($x4693 (= DISJ_W_S2_R_S2 $x1472)))
 (let (($x1130 (not (or R_S1_V4 (and W_S2_V5 R_S1_V5) (and W_S2_V3 R_S1_V3)))))
 (let (($x1817 (= DISJ_W_S2_R_S1 $x1130)))
 (let (($x255 (= DISJ_W_S1_W_S2 (not (or W_S1_V4 (and W_S1_V5 W_S2_V5) W_S2_V3)))))
 (let (($x1983 (and W_S1_V1 R_S2_V1)))
 (let (($x3826 (and W_S1_V2 R_S2_V2)))
 (let (($x2228 (and W_S1_V5 R_S2_V5)))
 (let (($x5984 (and W_S1_V4 R_S2_V4)))
 (let (($x5218 (= DISJ_W_S1_R_S2 (not (or $x5984 $x2228 $x3826 R_S2_V3 $x1983)))))
 (let (($x1905 (and W_S1_V1 R_S1_V1)))
 (let (($x3814 (and W_S1_V2 R_S1_V2)))
 (let (($x3360 (and W_S1_V5 R_S1_V5)))
 (let (($x2104 (and W_S1_V4 R_S1_V4)))
 (let (($x2609 (= DISJ_W_S1_R_S1 (not (or $x2104 $x3360 $x3814 R_S1_V3 $x1905)))))
 (let (($x1767 (not W_S2_V1)))
 (let (($x6049 (not W_S2_V2)))
 (and (and $x6049 $x1767 W_S1_V3 W_S2_V4 $x2609 $x5218 $x255 $x1817 $x4693 $x2339) $x2027)))))))))))))))))))))
(check-sat)
