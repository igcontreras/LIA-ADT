; benchmark generated from python API
(set-info :status unknown)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun R_E1_V1 () Bool)
(assert
 (let (($x1115 (not (and (not W_S1_V1) DISJ_W_S1_R_E1))))
 (let (($x4871 (and DISJ_W_S1_R_S1 DISJ_W_S1_R_E1)))
 (let (($x817 (not $x4871)))
 (let (($x2594 (forall ((V3_0 Int) )(forall ((V2_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((S1_V3_!438 Int) )(forall ((S1_V3_!444 Int) )(forall ((S1_V3_!449 Int) )(forall ((S1_V4_!440 Int) )(forall ((S1_V4_!446 Int) )(forall ((S1_V4_!451 Int) )(forall ((S1_V1_!437 Int) )(forall ((S1_V1_!443 Int) )(forall ((S1_V1_!448 Int) )(forall ((S1_V2_!439 Int) )(forall ((S1_V2_!445 Int) )(forall ((S1_V2_!450 Int) )(forall ((E1_!436 Int) )(forall ((E1_!441 Int) )(forall ((E1_!442 Int) )(forall ((E1_!447 Int) )(forall ((E1_!452 Int) )(let (($x32 (and (= (ite MW_S1_V1 S1_V1_!437 E1_!436) (+ (- 1) (ite MW_S1_V2 S1_V2_!450 V2_0))) (= (ite MW_S1_V3 S1_V3_!438 V3_0) (ite MW_S1_V3 S1_V3_!449 V3_0)) (= (ite MW_S1_V2 S1_V2_!439 V2_0) (ite MW_S1_V2 S1_V2_!450 V2_0)) (= (ite MW_S1_V4 S1_V4_!440 V4_0) (ite MW_S1_V4 S1_V4_!451 V4_0)))))
 (let ((?x305 (- 1)))
 (let (($x6031 (<= E1_!452 (+ ?x305 (ite MW_S1_V1 S1_V1_!448 (+ ?x305 (ite MW_S1_V1 S1_V1_!443 (+ ?x305 V2_0))))))))
 (let (($x5172 (and (not (<= V2_0 E1_!436)) (>= (ite MW_S1_V1 S1_V1_!437 E1_!436) (+ ?x305 (ite MW_S1_V2 S1_V2_!439 V2_0))) (not (<= V2_0 E1_!441)) (>= V2_0 (+ 1 E1_!442)) (>= (ite MW_S1_V1 S1_V1_!443 (+ ?x305 V2_0)) (+ 1 E1_!447)) (not $x6031))))
 (let (($x5812 (not MW_S1_V2)))
 (let (($x3220 (= E1_!452 E1_!447)))
 (let (($x2029 (and (or (not R_E1_V3) (= (ite MW_S1_V3 S1_V3_!449 V3_0) (ite MW_S1_V3 S1_V3_!444 V3_0))) (or (not R_E1_V2) (= (ite MW_S1_V2 S1_V2_!450 V2_0) (ite MW_S1_V2 S1_V2_!445 V2_0))) (or (not R_E1_V4) (= (ite MW_S1_V4 S1_V4_!451 V4_0) (ite MW_S1_V4 S1_V4_!446 V4_0))))))
 (let (($x1480 (= E1_!452 E1_!442)))
 (let (($x2861 (and (or (not R_E1_V3) (= (ite MW_S1_V3 S1_V3_!449 V3_0) V3_0)) (or (not R_E1_V2) (= (ite MW_S1_V2 S1_V2_!450 V2_0) V2_0)) (or (not R_E1_V4) (= (ite MW_S1_V4 S1_V4_!451 V4_0) V4_0)))))
 (let (($x2128 (not $x2861)))
 (let (($x3267 (= E1_!447 E1_!442)))
 (let (($x255 (and (or (not R_E1_V3) (= (ite MW_S1_V3 S1_V3_!444 V3_0) V3_0)) (or (not R_E1_V2) (= (ite MW_S1_V2 S1_V2_!445 V2_0) V2_0)) (or (not R_E1_V4) (= (ite MW_S1_V4 S1_V4_!446 V4_0) V4_0)))))
 (let (($x676 (and (or (not R_E1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!444 V3_0))) (or (not R_E1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!445 V2_0))) (or (not R_E1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!446 V4_0))))))
 (let (($x1767 (not $x676)))
 (let (($x5976 (= E1_!441 E1_!436)))
 (let ((?x3351 (ite MW_S1_V4 S1_V4_!446 V4_0)))
 (let (($x6049 (= ?x3351 V4_0)))
 (let (($x5363 (not R_S1_V4)))
 (let (($x1596 (or $x5363 $x6049)))
 (let ((?x2507 (ite MW_S1_V2 S1_V2_!445 V2_0)))
 (let (($x843 (= ?x2507 V2_0)))
 (let (($x3728 (not R_S1_V2)))
 (let (($x1452 (or $x3728 $x843)))
 (let ((?x3862 (ite MW_S1_V3 S1_V3_!444 V3_0)))
 (let (($x2343 (= ?x3862 V3_0)))
 (let (($x1051 (not R_S1_V3)))
 (let (($x591 (or $x1051 $x2343)))
 (let (($x3320 (and (or (not R_S1_V1) (= (ite MW_S1_V1 S1_V1_!443 (+ ?x305 V2_0)) V2_0)) $x591 $x1452 $x1596)))
 (let (($x5829 (not $x3320)))
 (let (($x287 (= V4_0 ?x3351)))
 (let (($x1472 (or $x5363 $x287)))
 (let (($x3631 (= V2_0 ?x2507)))
 (let (($x1268 (or $x3728 $x3631)))
 (let (($x3661 (= V3_0 ?x3862)))
 (let (($x1848 (or $x1051 $x3661)))
 (let (($x336 (and (or (not R_S1_V1) (= E1_!436 (+ ?x305 (ite MW_S1_V1 S1_V1_!443 (+ ?x305 V2_0))))) $x1848 $x1268 $x1472)))
 (let (($x47 (not $x336)))
 (let (($x2779 (not (or (not R_S1_V1) (= E1_!436 (+ ?x305 V2_0))))))
 (let (($x572 (not R_S1_V1)))
 (let (($x2905 (and (or $x572 (= (ite MW_S1_V1 S1_V1_!443 (+ ?x305 V2_0)) (+ 1 E1_!436))) $x591 $x1452 $x1596)))
 (let (($x2936 (and (or $x572 (= V2_0 (ite MW_S1_V1 S1_V1_!443 (+ ?x305 V2_0)))) $x1848 $x1268 $x1472)))
 (let (($x5291 (not $x2936)))
 (let (($x710 (and (or $x2779 (= S1_V3_!438 S1_V3_!444)) (or $x47 (= S1_V3_!438 S1_V3_!449)) (or $x5291 (= S1_V3_!444 S1_V3_!449)) (or (not (or $x572 (= V2_0 (+ 1 E1_!436)))) (= S1_V4_!446 S1_V4_!440)) (or $x5291 (= S1_V4_!446 S1_V4_!451)) (or (not $x2905) (= S1_V4_!451 S1_V4_!440)) (or $x2779 (= S1_V1_!437 S1_V1_!443)) (or $x47 (= S1_V1_!437 S1_V1_!448)) (or $x5829 (= S1_V1_!448 S1_V1_!443)) (or $x2779 (= S1_V2_!439 S1_V2_!445)) (or $x47 (= S1_V2_!439 S1_V2_!450)) (or $x5829 (= S1_V2_!450 S1_V2_!445)) (= E1_!436 E1_!442) (or $x1767 (= E1_!436 E1_!447)) $x5976 (= E1_!441 E1_!442) (or $x1767 (= E1_!441 E1_!447)) (or (not $x255) $x3267) (or $x2128 (= E1_!452 E1_!436)) (or $x2128 (= E1_!452 E1_!441)) (or $x2128 $x1480) (or (not $x2029) $x3220) (or (not MW_S1_V1) W_S1_V1) $x5812 (or (not MW_S1_V4) W_S1_V4))))
 (or (not $x710) (not $x5172) $x32)))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x5199 (= DISJ_W_S1_R_E1 (not (or R_E1_V3 (and W_S1_V4 R_E1_V4))))))
 (let (($x1400 (not (or (and W_S1_V1 R_S1_V1) R_S1_V3 (and W_S1_V4 R_S1_V4)))))
 (let (($x2435 (= DISJ_W_S1_R_S1 $x1400)))
 (let (($x572 (not R_S1_V1)))
 (let (($x5487 (and $x572 DISJ_W_S1_R_E1)))
 (let (($x590 (not W_S1_V1)))
 (let (($x2475 (or $x4871 $x590 $x5487)))
 (let (($x3312 (not W_S1_V2)))
 (let (($x4983 (not R_E1_V1)))
 (and (and $x4983 $x3312 $x2475 W_S1_V3 $x2435 $x5199 $x2594) $x817 $x1115)))))))))))))))
(check-sat)
