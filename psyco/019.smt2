; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun DISJ_W_S2_R_E1 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(assert
 (let (($x1766 (forall ((V3_0 Int) )(forall ((V2_0 Int) )(forall ((V5_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((MW_S2_V4 Bool) )(forall ((S1_V1_!390 Int) )(forall ((S1_V1_!401 Int) )(forall ((S2_V5_!398 Int) )(forall ((S1_V3_!391 Int) )(forall ((S1_V3_!402 Int) )(forall ((S1_V2_!392 Int) )(forall ((S1_V2_!403 Int) )(forall ((E1_!389 Int) )(forall ((E1_!400 Int) )(forall ((E1_!406 Int) )(forall ((S2_V4_!399 Int) )(forall ((S1_V5_!393 Int) )(forall ((S1_V5_!404 Int) )(forall ((S2_V1_!395 Int) )(forall ((S1_V4_!394 Int) )(forall ((S1_V4_!405 Int) )(forall ((S2_V2_!397 Int) )(forall ((S2_V3_!396 Int) )(let (($x1945 (and (= (ite MW_S2_V1 S2_V1_!395 (ite MW_S1_V1 S1_V1_!390 E1_!389)) (+ (- 1) E1_!406)) (= (ite MW_S2_V3 S2_V3_!396 (ite MW_S1_V3 S1_V3_!391 V3_0)) (ite MW_S1_V3 S1_V3_!402 V3_0)) (= (ite MW_S2_V2 S2_V2_!397 (ite MW_S1_V2 S1_V2_!392 V2_0)) (ite MW_S1_V2 S1_V2_!403 V2_0)) (= (ite MW_S2_V5 S2_V5_!398 (ite MW_S1_V5 S1_V5_!393 V5_0)) (ite MW_S1_V5 S1_V5_!404 V5_0)) (= (ite MW_S2_V4 S2_V4_!399 (ite MW_S1_V4 S1_V4_!394 V4_0)) (ite MW_S1_V4 S1_V4_!405 V4_0)))))
 (let ((?x2176 (ite MW_S2_V1 S2_V1_!395 (ite MW_S1_V1 S1_V1_!390 E1_!389))))
 (let (($x2232 (and (not (<= V2_0 E1_!389)) (>= ?x2176 (+ (- 1) (ite MW_S2_V2 S2_V2_!397 (ite MW_S1_V2 S1_V2_!392 V2_0)))) (not (<= V2_0 E1_!400)) (>= (ite MW_S1_V1 S1_V1_!401 E1_!400) (+ (- 1) (ite MW_S1_V2 S1_V2_!403 V2_0))) (>= E1_!406 (ite MW_S1_V2 S1_V2_!403 V2_0)))))
 (let (($x2306 (and (or (not R_E1_V3) (= (ite MW_S1_V3 S1_V3_!402 V3_0) V3_0)) (or (not R_E1_V2) (= (ite MW_S1_V2 S1_V2_!403 V2_0) V2_0)) (or (not R_E1_V5) (= (ite MW_S1_V5 S1_V5_!404 V5_0) V5_0)) (or (not R_E1_V4) (= (ite MW_S1_V4 S1_V4_!405 V4_0) V4_0)))))
 (let (($x1052 (and (or (not R_E1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!402 V3_0))) (or (not R_E1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!403 V2_0))) (or (not R_E1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!404 V5_0))) (or (not R_E1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!405 V4_0))))))
 (let (($x3494 (and (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V1_!390 S1_V1_!401)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V3_!391 S1_V3_!402)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V2_!392 S1_V2_!403)) (= E1_!400 E1_!389) (or (not $x1052) (= E1_!400 E1_!406)) (or (not $x2306) (= E1_!406 E1_!389)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V5_!393 S1_V5_!404)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!400))) (= S1_V4_!394 S1_V4_!405)) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V5) W_S1_V5) (or (not MW_S1_V4) W_S1_V4) (or (not MW_S2_V1) W_S2_V1) (or (not MW_S2_V3) W_S2_V3) (or (not MW_S2_V2) W_S2_V2) (or (not MW_S2_V5) W_S2_V5))))
 (or (not $x3494) (not $x2232) $x1945))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x710 (and W_S2_V5 R_E1_V5)))
 (let (($x2441 (and W_S2_V2 R_E1_V2)))
 (let (($x3354 (and W_S2_V3 R_E1_V3)))
 (let (($x2590 (= DISJ_W_S2_R_E1 (not (or $x3354 $x2441 $x710 R_E1_V4)))))
 (let (($x5092 (and W_S2_V5 R_S2_V5)))
 (let (($x2372 (and W_S2_V2 R_S2_V2)))
 (let (($x320 (and W_S2_V3 R_S2_V3)))
 (let (($x554 (and W_S2_V1 R_S2_V1)))
 (let (($x3106 (= DISJ_W_S2_R_S2 (not (or $x554 $x320 $x2372 $x5092 R_S2_V4)))))
 (let (($x5363 (and W_S2_V5 R_S1_V5)))
 (let (($x3493 (and W_S2_V2 R_S1_V2)))
 (let (($x2005 (and W_S2_V3 R_S1_V3)))
 (let (($x851 (and W_S2_V1 R_S1_V1)))
 (let (($x32 (= DISJ_W_S2_R_S1 (not (or $x851 $x2005 $x3493 $x5363 R_S1_V4)))))
 (let (($x1393 (and W_S1_V5 W_S2_V5)))
 (let (($x6048 (and W_S1_V2 W_S2_V2)))
 (let (($x3213 (and W_S1_V1 W_S2_V1)))
 (let (($x3174 (= DISJ_W_S1_W_S2 (not (or $x3213 W_S2_V3 $x6048 $x1393 W_S1_V4)))))
 (let (($x5871 (or R_E1_V3 (and W_S1_V2 R_E1_V2) (and W_S1_V5 R_E1_V5) (and W_S1_V4 R_E1_V4))))
 (let (($x5284 (= DISJ_W_S1_R_E1 (not $x5871))))
 (let (($x1952 (and W_S1_V4 R_S2_V4)))
 (let (($x1808 (and W_S1_V5 R_S2_V5)))
 (let (($x3878 (and W_S1_V2 R_S2_V2)))
 (let (($x670 (and W_S1_V1 R_S2_V1)))
 (let (($x3497 (= DISJ_W_S1_R_S2 (not (or $x670 R_S2_V3 $x3878 $x1808 $x1952)))))
 (let (($x2048 (and W_S1_V4 R_S1_V4)))
 (let (($x5026 (and W_S1_V5 R_S1_V5)))
 (let (($x3209 (and W_S1_V2 R_S1_V2)))
 (let (($x1232 (and W_S1_V1 R_S1_V1)))
 (let (($x4118 (= DISJ_W_S1_R_S1 (not (or $x1232 R_S1_V3 $x3209 $x5026 $x2048)))))
 (let (($x1593 (not R_E1_V1)))
 (and $x1593 W_S1_V3 W_S2_V4 $x4118 $x3497 $x5284 $x3174 $x32 $x3106 $x2590 $x1766))))))))))))))))))))))))))))))))))
(check-sat)
