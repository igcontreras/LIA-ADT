; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S1_V6 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V6 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V5 () Bool)
(assert
 (let (($x1969 (forall ((V2_0 Int) )(forall ((V5_0 Int) )(forall ((V6_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V6 Bool) )(forall ((S1_V1_!1392 Int) )(forall ((S1_V1_!1396 Int) )(forall ((S1_V1_!1400 Int) )(forall ((S1_V2_!1393 Int) )(forall ((S1_V2_!1397 Int) )(forall ((S1_V2_!1401 Int) )(forall ((S1_V5_!1394 Int) )(forall ((S1_V5_!1398 Int) )(forall ((S1_V5_!1402 Int) )(forall ((S1_V6_!1395 Int) )(forall ((S1_V6_!1399 Int) )(forall ((S1_V6_!1403 Int) )(let (($x3374 (and (= (ite MW_S1_V1 S1_V1_!1392 0) (+ (- 1) (ite MW_S1_V1 S1_V1_!1400 0) V4_0)) (= (ite MW_S1_V2 S1_V2_!1393 V2_0) (ite MW_S1_V2 S1_V2_!1401 V2_0)) (= (ite MW_S1_V5 S1_V5_!1394 V5_0) (ite MW_S1_V5 S1_V5_!1402 V5_0)) (= (ite MW_S1_V6 S1_V6_!1395 V6_0) (ite MW_S1_V6 S1_V6_!1403 V6_0)))))
 (let (($x265 (and (not (<= V2_0 0)) (>= (ite MW_S1_V1 S1_V1_!1392 0) (+ (- 1) (ite MW_S1_V2 S1_V2_!1393 V2_0))) (not (<= V4_0 0)) (not (<= V4_0 1)) (>= 2 V4_0) (>= (+ (ite MW_S1_V1 S1_V1_!1400 0) V4_0) (ite MW_S1_V2 S1_V2_!1401 V2_0)))))
 (let (($x778 (= S1_V6_!1399 S1_V6_!1403)))
 (let (($x40 (and (or (not R_S1_V1) (= 0 (ite MW_S1_V1 S1_V1_!1396 0))) (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!1397 V2_0))) (or (not R_S1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!1398 V5_0))) (or (not R_S1_V6) (= V6_0 (ite MW_S1_V6 S1_V6_!1399 V6_0))))))
 (let (($x4194 (not $x40)))
 (let (($x5685 (and (or (not R_S1_V1) (= (ite MW_S1_V1 S1_V1_!1396 0) 0)) (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!1397 V2_0) V2_0)) (or (not R_S1_V5) (= (ite MW_S1_V5 S1_V5_!1398 V5_0) V5_0)) (or (not R_S1_V6) (= (ite MW_S1_V6 S1_V6_!1399 V6_0) V6_0)))))
 (let (($x5274 (not $x5685)))
 (let (($x5504 (= S1_V5_!1398 S1_V5_!1394)))
 (let (($x674 (and (or $x4194 (= S1_V1_!1392 S1_V1_!1400)) (= S1_V1_!1396 S1_V1_!1392) (or $x4194 (= S1_V1_!1396 S1_V1_!1400)) (= S1_V2_!1397 S1_V2_!1393) (or $x5274 (= S1_V2_!1401 S1_V2_!1393)) (or $x5274 (= S1_V2_!1401 S1_V2_!1397)) $x5504 (or $x5274 (= S1_V5_!1402 S1_V5_!1394)) (or $x5274 (= S1_V5_!1402 S1_V5_!1398)) (= S1_V6_!1395 S1_V6_!1399) (or $x4194 (= S1_V6_!1395 S1_V6_!1403)) (or $x4194 $x778) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V6) W_S1_V6))))
 (or (not $x674) (not $x265) $x3374)))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x2903 (and W_S1_V6 R_S1_V6)))
 (let (($x883 (and W_S1_V2 R_S1_V2)))
 (let (($x1929 (and W_S1_V1 R_S1_V1)))
 (let (($x1195 (= DISJ_W_S1_R_S1 (not (or $x1929 $x883 R_S1_V5 $x2903)))))
 (and W_S1_V5 $x1195 $x1969)))))))
(check-sat)
