; benchmark generated from python API
(set-info :status unknown)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun DISJ_W_S2_R_E1 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun R_E1_V1 () Bool)
(assert
 (let (($x4873 (not (and (not W_S1_V2) DISJ_W_S1_R_E1))))
 (let (($x5702 (forall ((V3_0 Int) )(forall ((V2_0 Int) )(forall ((V5_0 Int) )(forall ((V4_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((MW_S2_V4 Bool) )(forall ((S1_V1_!390 Int) )(forall ((S1_V1_!397 Int) )(forall ((S2_V5_!405 Int) )(forall ((S1_V3_!391 Int) )(forall ((S1_V3_!398 Int) )(forall ((S1_V2_!392 Int) )(forall ((S1_V2_!399 Int) )(forall ((E1_!389 Int) )(forall ((E1_!395 Int) )(forall ((E1_!396 Int) )(forall ((S2_V4_!406 Int) )(forall ((S1_V5_!393 Int) )(forall ((S1_V5_!400 Int) )(forall ((S2_V1_!402 Int) )(forall ((S1_V4_!394 Int) )(forall ((S1_V4_!401 Int) )(forall ((S2_V2_!404 Int) )(forall ((S2_V3_!403 Int) )(let (($x2027 (and (= E1_!395 (+ 1 (ite MW_S2_V1 S2_V1_!402 (ite MW_S1_V1 S1_V1_!397 E1_!396)))) (= (ite MW_S1_V3 S1_V3_!391 V3_0) (ite MW_S2_V3 S2_V3_!403 (ite MW_S1_V3 S1_V3_!398 V3_0))) (= (ite MW_S1_V2 S1_V2_!392 V2_0) (ite MW_S2_V2 S2_V2_!404 (ite MW_S1_V2 S1_V2_!399 V2_0))) (= (ite MW_S1_V5 S1_V5_!393 V5_0) (ite MW_S2_V5 S2_V5_!405 (ite MW_S1_V5 S1_V5_!400 V5_0))) (= (ite MW_S1_V4 S1_V4_!394 V4_0) (ite MW_S2_V4 S2_V4_!406 (ite MW_S1_V4 S1_V4_!401 V4_0))))))
 (let ((?x4637 (ite MW_S2_V1 S2_V1_!402 (ite MW_S1_V1 S1_V1_!397 E1_!396))))
 (let (($x6030 (and (not (<= V2_0 E1_!389)) (>= (ite MW_S1_V1 S1_V1_!390 E1_!389) (+ (- 1) (ite MW_S1_V2 S1_V2_!392 V2_0))) (>= E1_!395 (ite MW_S1_V2 S1_V2_!392 V2_0)) (not (<= V2_0 E1_!396)) (>= ?x4637 (+ (- 1) (ite MW_S2_V2 S2_V2_!404 (ite MW_S1_V2 S1_V2_!399 V2_0)))))))
 (let (($x2264 (and (or (not R_E1_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!391 V3_0))) (or (not R_E1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!392 V2_0))) (or (not R_E1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!393 V5_0))) (or (not R_E1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!394 V4_0))))))
 (let (($x3278 (not $x2264)))
 (let (($x1448 (= E1_!396 E1_!389)))
 (let (($x3177 (and (or (not (or (not R_S1_V1) (= E1_!389 E1_!396))) (= S1_V1_!390 S1_V1_!397)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!396))) (= S1_V3_!391 S1_V3_!398)) (or (not (or (not R_S1_V1) $x1448)) (= S1_V2_!399 S1_V2_!392)) (or $x3278 (= E1_!389 E1_!395)) $x1448 (or $x3278 (= E1_!396 E1_!395)) (or (not (or (not R_S1_V1) (= E1_!389 E1_!396))) (= S1_V5_!393 S1_V5_!400)) (or (not (or (not R_S1_V1) $x1448)) (= S1_V4_!401 S1_V4_!394)) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V5) W_S1_V5) (or (not MW_S1_V4) W_S1_V4) (or (not MW_S2_V1) W_S2_V1) (or (not MW_S2_V3) W_S2_V3) (or (not MW_S2_V2) W_S2_V2) (or (not MW_S2_V5) W_S2_V5))))
 (or (not $x3177) (not $x6030) $x2027)))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x1393 (and W_S2_V5 R_E1_V5)))
 (let (($x2639 (and W_S2_V2 R_E1_V2)))
 (let (($x2374 (and W_S2_V3 R_E1_V3)))
 (let (($x1253 (= DISJ_W_S2_R_E1 (not (or $x2374 $x2639 $x1393 R_E1_V4)))))
 (let (($x359 (and W_S2_V5 R_S2_V5)))
 (let (($x58 (and W_S2_V2 R_S2_V2)))
 (let (($x2654 (and W_S2_V3 R_S2_V3)))
 (let (($x5391 (and W_S2_V1 R_S2_V1)))
 (let (($x107 (= DISJ_W_S2_R_S2 (not (or $x5391 $x2654 $x58 $x359 R_S2_V4)))))
 (let (($x4026 (and W_S2_V5 R_S1_V5)))
 (let (($x3245 (and W_S2_V2 R_S1_V2)))
 (let (($x5905 (and W_S2_V3 R_S1_V3)))
 (let (($x1968 (and W_S2_V1 R_S1_V1)))
 (let (($x3967 (= DISJ_W_S2_R_S1 (not (or $x1968 $x5905 $x3245 $x4026 R_S1_V4)))))
 (let (($x3736 (and W_S1_V5 W_S2_V5)))
 (let (($x878 (and W_S1_V2 W_S2_V2)))
 (let (($x6036 (and W_S1_V1 W_S2_V1)))
 (let (($x6032 (= DISJ_W_S1_W_S2 (not (or $x6036 W_S2_V3 $x878 $x3736 W_S1_V4)))))
 (let (($x3072 (and W_S1_V4 R_E1_V4)))
 (let (($x271 (and W_S1_V5 R_E1_V5)))
 (let (($x3716 (and W_S1_V2 R_E1_V2)))
 (let (($x7 (= DISJ_W_S1_R_E1 (not (or R_E1_V3 $x3716 $x271 $x3072)))))
 (let (($x5235 (and W_S1_V4 R_S2_V4)))
 (let (($x5320 (and W_S1_V5 R_S2_V5)))
 (let (($x5770 (and W_S1_V2 R_S2_V2)))
 (let (($x2456 (and W_S1_V1 R_S2_V1)))
 (let (($x1314 (= DISJ_W_S1_R_S2 (not (or $x2456 R_S2_V3 $x5770 $x5320 $x5235)))))
 (let (($x2180 (and W_S1_V4 R_S1_V4)))
 (let (($x6043 (and W_S1_V5 R_S1_V5)))
 (let (($x3661 (and W_S1_V2 R_S1_V2)))
 (let (($x924 (and W_S1_V1 R_S1_V1)))
 (let (($x3617 (= DISJ_W_S1_R_S1 (not (or $x924 R_S1_V3 $x3661 $x6043 $x2180)))))
 (let (($x1588 (not R_E1_V1)))
 (let (($x48 (and $x1588 W_S1_V3 W_S2_V4 $x3617 $x1314 $x7 $x6032 $x3967 $x107 $x1253 $x5702)))
 (and $x48 $x4873))))))))))))))))))))))))))))))))))))))
(check-sat)
