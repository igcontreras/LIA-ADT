; benchmark generated from python API
(set-info :status unknown)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V1 () Bool)
(assert
 (let (($x645 (not (and (not R_S1_V1) DISJ_W_S1_R_S1))))
 (let (($x755 (forall ((V4_0 Int) )(forall ((V5_0 Int) )(forall ((V2_0 Int) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V1 Bool) )(forall ((S1_V4_!146 Int) )(forall ((S1_V4_!150 Int) )(forall ((S1_V4_!154 Int) )(forall ((S1_V1_!149 Int) )(forall ((S1_V1_!153 Int) )(forall ((S1_V1_!157 Int) )(forall ((S1_V2_!148 Int) )(forall ((S1_V2_!152 Int) )(forall ((S1_V2_!156 Int) )(forall ((S1_V5_!147 Int) )(forall ((S1_V5_!151 Int) )(forall ((S1_V5_!155 Int) )(let (($x556 (and (= (ite MW_S1_V4 S1_V4_!146 V4_0) (ite MW_S1_V4 S1_V4_!154 V4_0)) (= (ite MW_S1_V5 S1_V5_!147 V5_0) (ite MW_S1_V5 S1_V5_!155 V5_0)) (= (ite MW_S1_V2 S1_V2_!148 V2_0) (ite MW_S1_V2 S1_V2_!156 V2_0)) (= (ite MW_S1_V1 S1_V1_!149 0) (+ (- 1) (ite MW_S1_V2 S1_V2_!156 V2_0))))))
 (let (($x400 (and (not (<= V2_0 0)) (>= (ite MW_S1_V1 S1_V1_!149 0) (+ (- 1) (ite MW_S1_V2 S1_V2_!148 V2_0))) (>= V2_0 1) (>= V2_0 2) (not (<= 3 V2_0)) (not (<= (ite MW_S1_V2 S1_V2_!156 V2_0) 0)))))
 (let (($x106 (= S1_V5_!155 S1_V5_!151)))
 (let (($x132 (not R_S1_V1)))
 (let (($x1544 (and (or (not R_S1_V4) (= (ite MW_S1_V4 S1_V4_!150 V4_0) V4_0)) (or (not R_S1_V5) (= (ite MW_S1_V5 S1_V5_!151 V5_0) V5_0)) (or (not R_S1_V2) (= (ite MW_S1_V2 S1_V2_!152 V2_0) V2_0)) (or $x132 (= (+ (ite MW_S1_V2 S1_V2_!152 V2_0) (* (- 1) V2_0)) (- 1))))))
 (let (($x398 (not $x1544)))
 (let (($x188 (= S1_V2_!148 S1_V2_!152)))
 (let (($x706 (= S1_V1_!153 S1_V1_!157)))
 (let (($x538 (and (or (not R_S1_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!150 V4_0))) (or (not R_S1_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!151 V5_0))) (or (not R_S1_V2) (= V2_0 (ite MW_S1_V2 S1_V2_!152 V2_0))) (or $x132 (= (- 1) (+ (ite MW_S1_V2 S1_V2_!152 V2_0) (* (- 1) V2_0)))))))
 (let (($x653 (not $x538)))
 (let (($x534 (and (or $x653 (= S1_V4_!146 S1_V4_!154)) (= S1_V4_!150 S1_V4_!146) (or $x653 (= S1_V4_!150 S1_V4_!154)) (or $x653 (= S1_V1_!149 S1_V1_!157)) (= S1_V1_!153 S1_V1_!149) (or $x653 $x706) $x188 (or $x398 (= S1_V2_!156 S1_V2_!148)) (or $x398 (= S1_V2_!156 S1_V2_!152)) (= S1_V5_!151 S1_V5_!147) (or $x398 (= S1_V5_!155 S1_V5_!147)) (or $x398 $x106) (or (not MW_S1_V5) W_S1_V5) (or (not MW_S1_V2) W_S1_V2) (not MW_S1_V1))))
 (or (not $x534) (not $x400) $x556)))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x453 (or R_S1_V4 (and W_S1_V5 R_S1_V5) (and W_S1_V2 R_S1_V2))))
 (let (($x448 (= DISJ_W_S1_R_S1 (not $x453))))
 (let (($x333 (not W_S1_V1)))
 (and (and $x333 W_S1_V4 $x448 $x755) W_S1_V2 $x645)))))))
(check-sat)
