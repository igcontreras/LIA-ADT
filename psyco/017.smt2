; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S2_V2 () Bool)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun R_E1_V1 () Bool)
(declare-fun R_E1_V4 () Bool)
(declare-fun R_E1_V5 () Bool)
(declare-fun R_E1_V2 () Bool)
(declare-fun R_E1_V3 () Bool)
(declare-fun DISJ_W_S2_R_E1 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_E1 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(assert
 (let (($x3849 (forall ((V1_0 Int) )(forall ((V2_0 Int) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((E1_!336 Int) )(forall ((E1_!337 Int) )(forall ((E1_!338 Int) )(let (($x1030 (= E1_!336 E1_!338)))
 (let (($x3366 (not MW_S2_V5)))
 (let (($x1310 (or $x3366 W_S2_V5)))
 (let (($x92 (not MW_S2_V2)))
 (let (($x1485 (or $x92 W_S2_V2)))
 (let (($x565 (not MW_S1_V4)))
 (let (($x4521 (or $x565 W_S1_V4)))
 (let (($x3379 (= E1_!338 E1_!337)))
 (let (($x2657 (not (or (not R_E1_V1) (= E1_!337 V1_0)))))
 (let (($x3495 (or $x2657 $x3379)))
 (let (($x2792 (= E1_!338 E1_!336)))
 (let (($x2224 (or $x2657 $x2792)))
 (let (($x3566 (and (= E1_!337 E1_!336) $x2224 $x3495 (or (not MW_S1_V1) W_S1_V1) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V5) W_S1_V5) $x4521 (or (not MW_S2_V1) W_S2_V1) (or (not MW_S2_V3) W_S2_V3) $x1485 $x1310)))
 (or (not $x3566) (not (and (>= E1_!336 V2_0) (>= E1_!337 V2_0) (>= E1_!338 V2_0))) $x1030)))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x5866 (and W_S2_V5 R_E1_V5)))
 (let (($x1593 (and W_S2_V2 R_E1_V2)))
 (let (($x4147 (and W_S2_V3 R_E1_V3)))
 (let (($x5474 (and W_S2_V1 R_E1_V1)))
 (let (($x1032 (= DISJ_W_S2_R_E1 (not (or $x5474 $x4147 $x1593 $x5866 R_E1_V4)))))
 (let (($x1005 (and W_S2_V5 R_S2_V5)))
 (let (($x962 (and W_S2_V2 R_S2_V2)))
 (let (($x5877 (and W_S2_V3 R_S2_V3)))
 (let (($x5161 (and W_S2_V1 R_S2_V1)))
 (let (($x5055 (= DISJ_W_S2_R_S2 (not (or $x5161 $x5877 $x962 $x1005 R_S2_V4)))))
 (let (($x5310 (and W_S2_V5 R_S1_V5)))
 (let (($x490 (and W_S2_V2 R_S1_V2)))
 (let (($x4687 (and W_S2_V3 R_S1_V3)))
 (let (($x1253 (and W_S2_V1 R_S1_V1)))
 (let (($x1021 (= DISJ_W_S2_R_S1 (not (or $x1253 $x4687 $x490 $x5310 R_S1_V4)))))
 (let (($x3855 (and W_S1_V5 W_S2_V5)))
 (let (($x1020 (and W_S1_V2 W_S2_V2)))
 (let (($x5201 (and W_S1_V1 W_S2_V1)))
 (let (($x3290 (= DISJ_W_S1_W_S2 (not (or $x5201 W_S2_V3 $x1020 $x3855 W_S1_V4)))))
 (let (($x1105 (and W_S1_V4 R_E1_V4)))
 (let (($x5166 (and W_S1_V5 R_E1_V5)))
 (let (($x1166 (and W_S1_V2 R_E1_V2)))
 (let (($x5280 (and W_S1_V1 R_E1_V1)))
 (let (($x3078 (= DISJ_W_S1_R_E1 (not (or $x5280 R_E1_V3 $x1166 $x5166 $x1105)))))
 (let (($x1290 (and W_S1_V4 R_S2_V4)))
 (let (($x5067 (and W_S1_V5 R_S2_V5)))
 (let (($x2306 (and W_S1_V2 R_S2_V2)))
 (let (($x3300 (and W_S1_V1 R_S2_V1)))
 (let (($x1685 (= DISJ_W_S1_R_S2 (not (or $x3300 R_S2_V3 $x2306 $x5067 $x1290)))))
 (let (($x1961 (and W_S1_V4 R_S1_V4)))
 (let (($x51 (and W_S1_V5 R_S1_V5)))
 (let (($x2312 (and W_S1_V2 R_S1_V2)))
 (let (($x1809 (and W_S1_V1 R_S1_V1)))
 (let (($x227 (= DISJ_W_S1_R_S1 (not (or $x1809 R_S1_V3 $x2312 $x51 $x1961)))))
 (and W_S1_V3 W_S2_V4 $x227 $x1685 $x3078 $x3290 $x1021 $x5055 $x1032 $x3849)))))))))))))))))))))))))))))))))))))
(check-sat)
