; benchmark generated from python API
(set-info :status unknown)
(declare-fun W_S2_V3 () Bool)
(declare-fun W_S2_V5 () Bool)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V3 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun R_S2_V1 () Bool)
(declare-fun R_S2_V3 () Bool)
(declare-fun R_S2_V2 () Bool)
(declare-fun R_S2_V5 () Bool)
(declare-fun R_S2_V4 () Bool)
(declare-fun DISJ_W_S2_R_S2 () Bool)
(declare-fun DISJ_W_S2_R_S1 () Bool)
(declare-fun DISJ_W_S1_W_S2 () Bool)
(declare-fun DISJ_W_S1_R_S2 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S2_V4 () Bool)
(declare-fun W_S1_V3 () Bool)
(declare-fun W_S2_V1 () Bool)
(declare-fun W_S2_V2 () Bool)
(assert
 (let (($x2661 (forall ((V4_0 Int) )(forall ((V5_0 Int) )(forall ((V2_0 Int) )(forall ((V3_0 Int) )(forall ((V1_0 Int) )(forall ((MW_S1_V4 Bool) )(forall ((MW_S1_V5 Bool) )(forall ((MW_S1_V2 Bool) )(forall ((MW_S1_V3 Bool) )(forall ((MW_S1_V1 Bool) )(forall ((MW_S2_V4 Bool) )(forall ((MW_S2_V5 Bool) )(forall ((MW_S2_V2 Bool) )(forall ((MW_S2_V3 Bool) )(forall ((MW_S2_V1 Bool) )(forall ((S1_V4_!400 Int) )(forall ((S1_V4_!415 Int) )(forall ((S2_V4_!405 Int) )(forall ((S2_V4_!410 Int) )(forall ((S2_V5_!406 Int) )(forall ((S2_V5_!411 Int) )(forall ((S1_V1_!404 Int) )(forall ((S1_V1_!419 Int) )(forall ((S1_V3_!403 Int) )(forall ((S1_V3_!418 Int) )(forall ((S1_V2_!402 Int) )(forall ((S1_V2_!417 Int) )(forall ((S2_V1_!409 Int) )(forall ((S2_V1_!414 Int) )(forall ((S2_V2_!407 Int) )(forall ((S2_V2_!412 Int) )(forall ((S2_V3_!408 Int) )(forall ((S2_V3_!413 Int) )(forall ((S1_V5_!401 Int) )(forall ((S1_V5_!416 Int) )(let ((?x5586 (ite MW_S2_V1 S2_V1_!414 V1_0)))
 (let ((?x1736 (ite MW_S1_V1 S1_V1_!419 ?x5586)))
 (let ((?x2773 (ite MW_S1_V1 S1_V1_!404 V1_0)))
 (let ((?x1442 (ite MW_S2_V1 S2_V1_!409 ?x2773)))
 (let (($x2359 (= (ite MW_S2_V3 S2_V3_!408 (ite MW_S1_V3 S1_V3_!403 V3_0)) (ite MW_S1_V3 S1_V3_!418 (ite MW_S2_V3 S2_V3_!413 V3_0)))))
 (let ((?x5928 (ite MW_S2_V2 S2_V2_!412 V2_0)))
 (let ((?x5795 (ite MW_S1_V2 S1_V2_!417 ?x5928)))
 (let ((?x595 (ite MW_S1_V2 S1_V2_!402 V2_0)))
 (let ((?x591 (ite MW_S2_V2 S2_V2_!407 ?x595)))
 (let (($x5910 (= (ite MW_S2_V5 S2_V5_!406 (ite MW_S1_V5 S1_V5_!401 V5_0)) (ite MW_S1_V5 S1_V5_!416 (ite MW_S2_V5 S2_V5_!411 V5_0)))))
 (let (($x3007 (= (ite MW_S2_V4 S2_V4_!405 (ite MW_S1_V4 S1_V4_!400 V4_0)) (ite MW_S1_V4 S1_V4_!415 (ite MW_S2_V4 S2_V4_!410 V4_0)))))
 (let (($x958 (and (not (<= V2_0 V1_0)) (>= ?x1442 (+ (- 1) ?x591)) (not (<= ?x5928 ?x5586)) (>= ?x1736 (+ (- 1) ?x5795)))))
 (let (($x2583 (not MW_S2_V1)))
 (let (($x219 (not MW_S2_V2)))
 (let (($x5093 (= S1_V5_!416 S1_V5_!401)))
 (let (($x4413 (and (or (not R_S1_V4) (= (ite MW_S2_V4 S2_V4_!410 V4_0) V4_0)) (or (not R_S1_V5) (= (ite MW_S2_V5 S2_V5_!411 V5_0) V5_0)) (or (not R_S1_V2) (= ?x5928 V2_0)) (or (not R_S1_V3) (= (ite MW_S2_V3 S2_V3_!413 V3_0) V3_0)) (or (not R_S1_V1) (= ?x5586 V1_0)))))
 (let (($x4365 (not $x4413)))
 (let (($x939 (= S2_V3_!408 S2_V3_!413)))
 (let (($x3387 (and (or (not R_S2_V4) (= (ite MW_S1_V4 S1_V4_!400 V4_0) V4_0)) (or (not R_S2_V5) (= (ite MW_S1_V5 S1_V5_!401 V5_0) V5_0)) (or (not R_S2_V2) (= ?x595 V2_0)) (or (not R_S2_V3) (= (ite MW_S1_V3 S1_V3_!403 V3_0) V3_0)) (or (not R_S2_V1) (= ?x2773 V1_0)))))
 (let (($x5932 (not $x3387)))
 (let (($x2942 (= S2_V4_!410 S2_V4_!405)))
 (let (($x3484 (and (or (not R_S2_V4) (= V4_0 (ite MW_S1_V4 S1_V4_!400 V4_0))) (or (not R_S2_V5) (= V5_0 (ite MW_S1_V5 S1_V5_!401 V5_0))) (or (not R_S2_V2) (= V2_0 ?x595)) (or (not R_S2_V3) (= V3_0 (ite MW_S1_V3 S1_V3_!403 V3_0))) (or (not R_S2_V1) (= V1_0 ?x2773)))))
 (let (($x2983 (and (or $x4365 (= S1_V4_!415 S1_V4_!400)) (or (not $x3484) $x2942) (or $x5932 (= S2_V5_!406 S2_V5_!411)) (or $x4365 (= S1_V1_!419 S1_V1_!404)) (or $x4365 (= S1_V3_!418 S1_V3_!403)) (or $x4365 (= S1_V2_!417 S1_V2_!402)) (or $x5932 (= S2_V1_!409 S2_V1_!414)) (or $x5932 (= S2_V2_!407 S2_V2_!412)) (or $x5932 $x939) (or $x4365 $x5093) (or (not MW_S1_V4) W_S1_V4) (or (not MW_S1_V5) W_S1_V5) (or (not MW_S1_V2) W_S1_V2) (or (not MW_S1_V1) W_S1_V1) (or (not MW_S2_V5) W_S2_V5) $x219 (or (not MW_S2_V3) W_S2_V3) $x2583)))
 (or (not $x2983) (not $x958) (and $x3007 $x5910 (= ?x591 ?x5795) $x2359 (= ?x1442 ?x1736)))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 ))
 (let (($x1947 (not (or R_S2_V4 (and W_S2_V5 R_S2_V5) (and W_S2_V3 R_S2_V3)))))
 (let (($x3373 (= DISJ_W_S2_R_S2 $x1947)))
 (let (($x5790 (not (or R_S1_V4 (and W_S2_V5 R_S1_V5) (and W_S2_V3 R_S1_V3)))))
 (let (($x1291 (= DISJ_W_S2_R_S1 $x5790)))
 (let (($x3106 (= DISJ_W_S1_W_S2 (not (or W_S1_V4 (and W_S1_V5 W_S2_V5) W_S2_V3)))))
 (let (($x3105 (and W_S1_V1 R_S2_V1)))
 (let (($x855 (and W_S1_V2 R_S2_V2)))
 (let (($x3271 (and W_S1_V5 R_S2_V5)))
 (let (($x4918 (and W_S1_V4 R_S2_V4)))
 (let (($x598 (= DISJ_W_S1_R_S2 (not (or $x4918 $x3271 $x855 R_S2_V3 $x3105)))))
 (let (($x1929 (and W_S1_V1 R_S1_V1)))
 (let (($x883 (and W_S1_V2 R_S1_V2)))
 (let (($x1276 (and W_S1_V5 R_S1_V5)))
 (let (($x1348 (and W_S1_V4 R_S1_V4)))
 (let (($x5156 (= DISJ_W_S1_R_S1 (not (or $x1348 $x1276 $x883 R_S1_V3 $x1929)))))
 (let (($x5391 (not W_S2_V1)))
 (let (($x957 (not W_S2_V2)))
 (and $x957 $x5391 W_S1_V3 W_S2_V4 $x5156 $x598 $x3106 $x1291 $x3373 $x2661))))))))))))))))))))
(check-sat)
